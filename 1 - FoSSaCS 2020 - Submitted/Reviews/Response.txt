Review 2:

*** (1) The authors should compare more in detail their contribution with the existing literature (the shortcut "This is deeply different from what we do here" [p.3] is too coarse, in fact I disagree on this point). The idea of implementing probabilistic lambda-calculi by a deterministic rewriting enjoying a confluence property is already present in the literature, e.g. Faggian and Ronchi della Rocca's [12], but also (not cited) Alberti's PhD thesis "On operational properties of quantitative extensions of Î»-calculus" and (also not cited) 


*** Leventis' MSCS 2019 paper "A deterministic rewrite system for the probabilistic lambda-calculus"

We are grateful for the reference. Indeed, Leventis gives an account of standard CBN probabilistic lambda-calculus by similar rewriting to ours - in fact, our system simulates his. The difference is our decomposition: Leventis can only express CBN reduction, and not CBV as we do.


*** (2) The second issue is more problematic from my point of view. The authors claim in the abstract that their calculus "interprets the call-by-name and call-by-value strategies", but, as far as I understand, the paper misses a clear account of these interpretations. 

*** Section 7 is devoted to a translation of cbv into their calculus, but I feel this one-page section sketched and much less accurate than the rest of the paper. 

We agree: we would have liked to be more precise, but were struggling against time. We have since improved the exposition by using explicit streams in {0,1}^* to represent probabilistic events.

*** Proposition 35 claims a kind of of simulation but the authors do not discuss the converse, neither the asymptotic behaviour of the semantics, even not with examples. 

Indeed, there is _almost_ a bisimulation: probabilistic steps in N and projective steps in [[N]]_cbv are in 1-1 correspondence. But [[N]]_cbv allows beta-steps that duplicate a labelled choice, which are unavailable in N. Still, confluence ensures that a normal form of [[N]]_cbv is the translation of the CBV normal form of N. We would be happy to include a further example.

*** I do not see a similar discussion for the lazy cbn or the head-reduction.



Review 3:

*** I was missing a deeper comparison of the merits of the proposed approach with potential alternative solutions based on linear logic or CBPV. Could the latter lead to a simpler reduction system, e.g. without so many instances of copying present in ->_p?

We point to projective reduction as the simpler reduction system.

